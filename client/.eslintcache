[{"D:\\TTCN\\mern\\client\\src\\index.js":"1","D:\\TTCN\\mern\\client\\src\\App.js":"2","D:\\TTCN\\mern\\client\\src\\reportWebVitals.js":"3","D:\\TTCN\\mern\\client\\src\\screens\\FileUploadScreen.js":"4","D:\\TTCN\\mern\\client\\src\\data\\api.js":"5"},{"size":517,"mtime":1621038665044,"results":"6","hashOfConfig":"7"},{"size":2773,"mtime":1621038665043,"results":"8","hashOfConfig":"7"},{"size":375,"mtime":1621038665044,"results":"9","hashOfConfig":"7"},{"size":5401,"mtime":1621038665045,"results":"10","hashOfConfig":"7"},{"size":876,"mtime":1621038665043,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17xtz06",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\TTCN\\mern\\client\\src\\index.js",[],"D:\\TTCN\\mern\\client\\src\\App.js",["24"],"import React, {useState, useEffect} from 'react';\r\nimport './App.css';\r\nimport FileUploadScreen from './screens/FileUploadScreen';\r\nimport {getSingleFiles, getMultipleFiles} from './data/api';\r\n\r\nfunction App() {\r\n  const [singleFiles, setSingleFiles] = useState([]);\r\n  const [multipleFiles, setMultipleFiles] = useState([]);\r\n\r\n  const getSingleFileslist = async () => {\r\n    try {\r\n        const fileslist = await getSingleFiles();\r\n        setSingleFiles(fileslist);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  const getMultipleFilesList = async () => {\r\n    try {\r\n        const fileslist = await getMultipleFiles();\r\n        setMultipleFiles(fileslist);\r\n        console.log(multipleFiles);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getSingleFileslist();\r\n    getMultipleFilesList();\r\n  }, []);\r\n  return (\r\n    <>\r\n        <div className=\"container\">\r\n          <h3 className=\"text-danger font-weight-bolder border-bottom text-center\">Single & Multiple File Upload Using MERN Stack </h3>\r\n          <FileUploadScreen getsingle={() => getSingleFileslist()} getMultiple={() => getMultipleFilesList()}/>\r\n       </div> \r\n       <div className=\"container-fluid mt-5\">\r\n         <div className=\"row\">\r\n           <div className=\"col-6\">\r\n             <h4 className=\"text-success font-weight-bold\">Single Files List</h4>\r\n             <div className=\"row\">\r\n                {singleFiles.map((file, index) => \r\n                  <div className=\"col-6\">\r\n                    <div className=\"card mb-2 border-0 p-0\">\r\n                      <img src={`http://localhost:8080/${file.filePath}`} height=\"200\" className=\"card-img-top img-responsive\" alt=\"img\"/>\r\n                      </div>\r\n                  </div>\r\n                )}\r\n             </div>\r\n           </div>\r\n           <div className=\"col-6\">\r\n             <h4 className=\"text-success font-weight-bold\">Multiple Files List</h4>\r\n             {multipleFiles.map((element, index) =>\r\n                <div key={element._id}>\r\n                    <h6 className=\"text-danger font-weight-bold\">{element.title}</h6>\r\n                    <div className=\"row\">\r\n                      {element.files.map((file, index) =>\r\n                        <div className=\"col-6\">\r\n                            <div className=\"card mb-2 border-0 p-0\">\r\n                              <img src={`http://localhost:8080/${file.filePath}`} height=\"200\" className=\"card-img-top img-responsive\" alt=\"img\"/>\r\n                              </div>\r\n                          </div>\r\n                       )}\r\n                      </div>\r\n                </div>\r\n              )}\r\n           </div>\r\n         </div>\r\n       </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\TTCN\\mern\\client\\src\\reportWebVitals.js",[],"D:\\TTCN\\mern\\client\\src\\screens\\FileUploadScreen.js",["25"],"import React, {useState, useEffect} from 'react';\r\nimport {singleFileUpload, multipleFilesUpload} from '../data/api';\r\nimport {CircularProgressbar, buildStyles} from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\n\r\nconst FileUploadScreen = (props) => {\r\n    const [singleFile, setSingleFile] = useState('');\r\n    const [multipleFiles, setMultipleFiles] = useState('');\r\n    const [title, setTitle] =  useState('');\r\n    const [singleProgress, setSingleProgress] = useState(0);\r\n    const [multipleProgress, setMultipleProgress] = useState(0);\r\n\r\n    const SingleFileChange = (e) => {\r\n        setSingleFile(e.target.files[0]);\r\n        setSingleProgress(0);\r\n    }\r\n    const MultipleFileChange = (e) => {\r\n        setMultipleFiles(e.target.files);\r\n        setMultipleProgress(0);\r\n    }\r\n    const singleFileOptions = {\r\n        onUploadProgress: (progressEvent) => {\r\n            const {loaded, total} = progressEvent;\r\n            const percentage = Math.floor(((loaded / 1000) * 100) / (total / 1000));\r\n            setSingleProgress(percentage);\r\n        }\r\n    }\r\n    const mulitpleFileOptions = {\r\n        onUploadProgress: (progressEvent) => {\r\n            const {loaded, total} = progressEvent;\r\n            const percentage = Math.floor(((loaded / 1000) * 100) / (total / 1000));\r\n            setMultipleProgress(percentage);\r\n        }\r\n    }\r\n    const uploadSingleFile = async () => {\r\n        const formData = new FormData();\r\n        formData.append('file', singleFile);\r\n        await singleFileUpload(formData, singleFileOptions);\r\n        props.getsingle();\r\n    }\r\n    const UploadMultipleFiles = async () => {\r\n        const formData = new FormData();\r\n        formData.append('title', title);\r\n        for (let i = 0; i < multipleFiles.length; i++) {\r\n            formData.append('files', multipleFiles[i]);                      \r\n        }\r\n        await multipleFilesUpload(formData, mulitpleFileOptions);\r\n        props.getMultiple();\r\n    }\r\n    return (\r\n        <div className=\"row mt-3\">\r\n            <div className=\"col-6\">\r\n                <div className=\"form-group\">\r\n                    <label>Select Single File</label>\r\n                    <input type=\"file\" className=\"form-control\" onChange={(e) => SingleFileChange(e)} />\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-10\">\r\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => uploadSingleFile()} >Upload</button>\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                        <CircularProgressbar\r\n                            value={singleProgress}\r\n                            text={`${singleProgress}%`}\r\n                            styles={buildStyles({\r\n                                rotation: 0.25,\r\n                                strokeLinecap: 'butt',\r\n                                textSize: '16px',\r\n                                pathTransitionDuration: 0.5,\r\n                                pathColor: `rgba(255, 136, 136, ${singleProgress / 100})`,\r\n                                textColor: '#f88',\r\n                                trailColor: '#d6d6d6',\r\n                                backgroundColor: '#3e98c7',\r\n                            })}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-6\">\r\n                   <div className=\"row\">\r\n                       <div className=\"col-6\">\r\n                            <label >Title</label>\r\n                            <input type=\"text\" onChange={(e) => setTitle(e.target.value) } placeholder=\"enter title for your gallery\" className=\"form-control\"/>\r\n                       </div>\r\n                       <div className=\"col-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>Select Multiple Files</label>\r\n                            <input type=\"file\" onChange={(e) => MultipleFileChange(e)} className=\"form-control\" multiple />\r\n                        </div>\r\n                       </div>\r\n                   </div>                   \r\n                    <div className=\"row\">\r\n                        <div className=\"col-10\">\r\n                            <button type=\"button\" onClick={() => UploadMultipleFiles()}  className=\"btn btn-danger\">Upload</button>\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                        <CircularProgressbar\r\n                            value={multipleProgress}\r\n                            text={`${multipleProgress}%`}\r\n                            styles={buildStyles({\r\n                                rotation: 0.25,\r\n                                strokeLinecap: 'butt',\r\n                                textSize: '16px',\r\n                                pathTransitionDuration: 0.5,\r\n                                pathColor: `rgba(255, 136, 136, ${multipleProgress / 100})`,\r\n                                textColor: '#f88',\r\n                                trailColor: '#d6d6d6',\r\n                                backgroundColor: '#3e98c7',\r\n                            })}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileUploadScreen;","D:\\TTCN\\mern\\client\\src\\data\\api.js",[],{"ruleId":"26","severity":1,"message":"27","line":30,"column":6,"nodeType":"28","endLine":30,"endColumn":8,"suggestions":"29"},{"ruleId":"30","severity":1,"message":"31","line":1,"column":26,"nodeType":"32","messageId":"33","endLine":1,"endColumn":35},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMultipleFilesList'. Either include it or remove the dependency array.","ArrayExpression",["34"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",{"desc":"35","fix":"36"},"Update the dependencies array to be: [getMultipleFilesList]",{"range":"37","text":"38"},[863,865],"[getMultipleFilesList]"]