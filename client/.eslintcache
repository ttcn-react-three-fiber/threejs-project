[{"D:\\TTCN\\mern\\client\\src\\index.js":"1","D:\\TTCN\\mern\\client\\src\\App.js":"2","D:\\TTCN\\mern\\client\\src\\reportWebVitals.js":"3","D:\\TTCN\\mern\\client\\src\\data\\api.js":"4","D:\\TTCN\\mern\\client\\src\\pages\\FileUploadScreen.js":"5","D:\\TTCN\\mern\\client\\src\\three.js":"6","D:\\TTCN\\mern\\client\\src\\ShoeModel.js":"7","D:\\TTCN\\mern\\client\\src\\Picker.js":"8","D:\\TTCN\\mern\\client\\src\\setupTests.js":"9","D:\\TTCN\\mern\\client\\src\\components\\GetUrlModel.js":"10","D:\\TTCN\\mern\\client\\src\\App.test.js":"11","D:\\TTCN\\mern\\client\\src\\pages\\FileModel.js":"12"},{"size":580,"mtime":1622795804232,"results":"13","hashOfConfig":"14"},{"size":3169,"mtime":1622706142197,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1621038665044,"results":"16","hashOfConfig":"14"},{"size":876,"mtime":1622796509067,"results":"17","hashOfConfig":"14"},{"size":5401,"mtime":1621759726715,"results":"18","hashOfConfig":"14"},{"size":6569,"mtime":1622797416990,"results":"19","hashOfConfig":"14"},{"size":4246,"mtime":1622696945570,"results":"20","hashOfConfig":"14"},{"size":679,"mtime":1622794511510,"results":"21","hashOfConfig":"14"},{"size":246,"mtime":1621038665045,"results":"22","hashOfConfig":"14"},{"size":301,"mtime":1622423288237,"results":"23","hashOfConfig":"14"},{"size":254,"mtime":1621038665043,"results":"24","hashOfConfig":"14"},{"size":5401,"mtime":1622422385157,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1o5zkjb",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"31"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"48"},"D:\\TTCN\\mern\\client\\src\\index.js",["56"],"D:\\TTCN\\mern\\client\\src\\App.js",["57"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport FileUploadScreen from \"./pages/FileUploadScreen\";\r\nimport { getSingleFiles, getMultipleFiles } from \"./data/api\";\r\nimport ThreeModel from \"./three\";\r\n\r\nfunction App() {\r\n  const [singleFiles, setSingleFiles] = useState([]);\r\n  const [multipleFiles, setMultipleFiles] = useState([]);\r\n\r\n  const getSingleFileslist = async () => {\r\n    try {\r\n      const fileslist = await getSingleFiles();\r\n      setSingleFiles(fileslist);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const getMultipleFilesList = async () => {\r\n    try {\r\n      const fileslist = await getMultipleFiles();\r\n      setMultipleFiles(fileslist);\r\n      console.log(multipleFiles);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getSingleFileslist();\r\n    getMultipleFilesList();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h3 className=\"text-danger font-weight-bolder border-bottom text-center\">\r\n          Single & Multiple File Upload Using MERN Stack{\" \"}\r\n        </h3>\r\n        <FileUploadScreen\r\n          getsingle={() => getSingleFileslist()}\r\n          getMultiple={() => getMultipleFilesList()}\r\n        />\r\n      </div>\r\n      <div className=\"container-fluid\">\r\n        <ThreeModel />\r\n      </div>\r\n      <div className=\"container-fluid mt-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <h4 className=\"text-success font-weight-bold\">Single Files List</h4>\r\n            <div className=\"row\">\r\n              {singleFiles.map((file, index) => (\r\n                <div className=\"col-6\">\r\n                  <div className=\"card mb-2 border-0 p-0\">\r\n                    <img\r\n                      src={`http://localhost:8080/${file.filePathJs}`}\r\n                      height=\"200\"\r\n                      className=\"card-img-top img-responsive\"\r\n                      alt=\"img\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <h4 className=\"text-success font-weight-bold\">\r\n              Multiple Files List\r\n            </h4>\r\n            {multipleFiles.map((element, index) => (\r\n              <div key={element._id}>\r\n                <h6 className=\"text-danger font-weight-bold\">\r\n                  {element.title}\r\n                </h6>\r\n                <div className=\"row\">\r\n                  {element.files.map((file, index) => (\r\n                    <div className=\"col-6\">\r\n                      <div className=\"card mb-2 border-0 p-0\">\r\n                        <img\r\n                          src={`http://localhost:8080/${file.filePath}`}\r\n                          height=\"200\"\r\n                          className=\"card-img-top img-responsive\"\r\n                          alt=\"img\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["58","59"],"D:\\TTCN\\mern\\client\\src\\reportWebVitals.js",[],"D:\\TTCN\\mern\\client\\src\\data\\api.js",[],"D:\\TTCN\\mern\\client\\src\\pages\\FileUploadScreen.js",["60"],"import React, {useState, useEffect} from 'react';\r\nimport {singleFileUpload, multipleFilesUpload} from '../data/api';\r\nimport {CircularProgressbar, buildStyles} from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\n\r\nconst FileUploadScreen = (props) => {\r\n    const [singleFile, setSingleFile] = useState('');\r\n    const [multipleFiles, setMultipleFiles] = useState('');\r\n    const [title, setTitle] =  useState('');\r\n    const [singleProgress, setSingleProgress] = useState(0);\r\n    const [multipleProgress, setMultipleProgress] = useState(0);\r\n\r\n    const SingleFileChange = (e) => {\r\n        setSingleFile(e.target.files[0]);\r\n        setSingleProgress(0);\r\n    }\r\n    const MultipleFileChange = (e) => {\r\n        setMultipleFiles(e.target.files);\r\n        setMultipleProgress(0);\r\n    }\r\n    const singleFileOptions = {\r\n        onUploadProgress: (progressEvent) => {\r\n            const {loaded, total} = progressEvent;\r\n            const percentage = Math.floor(((loaded / 1000) * 100) / (total / 1000));\r\n            setSingleProgress(percentage);\r\n        }\r\n    }\r\n    const mulitpleFileOptions = {\r\n        onUploadProgress: (progressEvent) => {\r\n            const {loaded, total} = progressEvent;\r\n            const percentage = Math.floor(((loaded / 1000) * 100) / (total / 1000));\r\n            setMultipleProgress(percentage);\r\n        }\r\n    }\r\n    const uploadSingleFile = async () => {\r\n        const formData = new FormData();\r\n        formData.append('file', singleFile);\r\n        await singleFileUpload(formData, singleFileOptions);\r\n        props.getsingle();\r\n    }\r\n    const UploadMultipleFiles = async () => {\r\n        const formData = new FormData();\r\n        formData.append('title', title);\r\n        for (let i = 0; i < multipleFiles.length; i++) {\r\n            formData.append('files', multipleFiles[i]);                      \r\n        }\r\n        await multipleFilesUpload(formData, mulitpleFileOptions);\r\n        props.getMultiple();\r\n    }\r\n    return (\r\n        <div className=\"row mt-3\">\r\n            <div className=\"col-6\">\r\n                <div className=\"form-group\">\r\n                    <label>Select Single File</label>\r\n                    <input type=\"file\" className=\"form-control\" onChange={(e) => SingleFileChange(e)} />\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-10\">\r\n                        <button type=\"button\" className=\"btn btn-danger\" onClick={() => uploadSingleFile()} >Upload</button>\r\n                    </div>\r\n                    <div className=\"col-2\">\r\n                        <CircularProgressbar\r\n                            value={singleProgress}\r\n                            text={`${singleProgress}%`}\r\n                            styles={buildStyles({\r\n                                rotation: 0.25,\r\n                                strokeLinecap: 'butt',\r\n                                textSize: '16px',\r\n                                pathTransitionDuration: 0.5,\r\n                                pathColor: `rgba(255, 136, 136, ${singleProgress / 100})`,\r\n                                textColor: '#f88',\r\n                                trailColor: '#d6d6d6',\r\n                                backgroundColor: '#3e98c7',\r\n                            })}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-6\">\r\n                   <div className=\"row\">\r\n                       <div className=\"col-6\">\r\n                            <label >Title</label>\r\n                            <input type=\"text\" onChange={(e) => setTitle(e.target.value) } placeholder=\"enter title for your gallery\" className=\"form-control\"/>\r\n                       </div>\r\n                       <div className=\"col-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>Select Multiple Files</label>\r\n                            <input type=\"file\" onChange={(e) => MultipleFileChange(e)} className=\"form-control\" multiple />\r\n                        </div>\r\n                       </div>\r\n                   </div>                   \r\n                    <div className=\"row\">\r\n                        <div className=\"col-10\">\r\n                            <button type=\"button\" onClick={() => UploadMultipleFiles()}  className=\"btn btn-danger\">Upload</button>\r\n                        </div>\r\n                        <div className=\"col-2\">\r\n                        <CircularProgressbar\r\n                            value={multipleProgress}\r\n                            text={`${multipleProgress}%`}\r\n                            styles={buildStyles({\r\n                                rotation: 0.25,\r\n                                strokeLinecap: 'butt',\r\n                                textSize: '16px',\r\n                                pathTransitionDuration: 0.5,\r\n                                pathColor: `rgba(255, 136, 136, ${multipleProgress / 100})`,\r\n                                textColor: '#f88',\r\n                                trailColor: '#d6d6d6',\r\n                                backgroundColor: '#3e98c7',\r\n                            })}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FileUploadScreen;","D:\\TTCN\\mern\\client\\src\\three.js",["61","62","63","64","65","66","67"],"D:\\TTCN\\mern\\client\\src\\ShoeModel.js",["68","69","70"],"/*\r\nAuto-generated by: https://github.com/pmndrs/gltfjsx\r\n*/\r\n\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { useSnapshot } from \"valtio\";\r\nimport { useGLTF } from \"@react-three/drei\";\r\n\r\nexport default function ShoeModel(props) {\r\n  const ref = useRef();\r\n  const snap = useSnapshot(props.state);\r\n  const { nodes, materials } = useGLTF(\"http://localhost:8080/uploads/shoe-draco.glb\");\r\n\r\n  // Animate model\r\n  useFrame((state) => {\r\n    const t = state.clock.getElapsedTime();\r\n    ref.current.rotation.z = -0.2 - (1 + Math.sin(t / 1.5)) / 20;\r\n    ref.current.rotation.x = Math.cos(t / 4) / 8;\r\n    ref.current.rotation.y = Math.sin(t / 4) / 8;\r\n    ref.current.position.y = (1 + Math.sin(t / 1.5)) / 10;\r\n  });\r\n  // Cursor showing current color\r\n  const [hovered, set] = useState(null);\r\n  useEffect(() => {\r\n    const cursor = `<svg width=\"64\" height=\"64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0)\"><path fill=\"rgba(255, 255, 255, 0.5)\" d=\"M29.5 54C43.031 54 54 43.031 54 29.5S43.031 5 29.5 5 5 15.969 5 29.5 15.969 54 29.5 54z\" stroke=\"#000\"/><g filter=\"url(#filter0_d)\"><path d=\"M29.5 47C39.165 47 47 39.165 47 29.5S39.165 12 29.5 12 12 19.835 12 29.5 19.835 47 29.5 47z\" fill=\"${snap.items[hovered]}\"/></g><path d=\"M2 2l11 2.947L4.947 13 2 2z\" fill=\"#000\"/><text fill=\"#000\" style=\"white-space:pre\" font-family=\"Inter var, sans-serif\" font-size=\"10\" letter-spacing=\"-.01em\"><tspan x=\"35\" y=\"63\">${hovered}</tspan></text></g><defs><clipPath id=\"clip0\"><path fill=\"#fff\" d=\"M0 0h64v64H0z\"/></clipPath><filter id=\"filter0_d\" x=\"6\" y=\"8\" width=\"47\" height=\"47\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\"><feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\"/><feColorMatrix in=\"SourceAlpha\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"/><feOffset dy=\"2\"/><feGaussianBlur stdDeviation=\"3\"/><feColorMatrix values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.15 0\"/><feBlend in2=\"BackgroundImageFix\" result=\"effect1_dropShadow\"/><feBlend in=\"SourceGraphic\" in2=\"effect1_dropShadow\" result=\"shape\"/></filter></defs></svg>`;\r\n    const auto = `<svg width=\"64\" height=\"64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"rgba(255, 255, 255, 0.5)\" d=\"M29.5 54C43.031 54 54 43.031 54 29.5S43.031 5 29.5 5 5 15.969 5 29.5 15.969 54 29.5 54z\" stroke=\"#000\"/><path d=\"M2 2l11 2.947L4.947 13 2 2z\" fill=\"#000\"/></svg>`;\r\n    document.body.style.cursor = `url('data:image/svg+xml;base64,${btoa(\r\n      hovered ? cursor : auto\r\n    )}'), auto`;\r\n  }, [hovered]);\r\n  return (\r\n    <group\r\n      ref={ref}\r\n      {...props}\r\n      dispose={null}\r\n      onPointerOver={(e) => (e.stopPropagation(), set(e.object.material.name))}\r\n      onPointerOut={(e) => e.intersections.length === 0 && set(null)}\r\n      onPointerMissed={() => (props.state.current = null)}\r\n      onPointerDown={(e) => (\r\n        e.stopPropagation(), (props.state.current = e.object.material.name)\r\n      )}\r\n    >\r\n      <mesh\r\n        geometry={nodes.shoe.geometry}\r\n        material={materials.laces}\r\n        material-color={snap.items.laces}\r\n      />\r\n      <mesh\r\n        geometry={nodes.shoe_1.geometry}\r\n        material={materials.mesh}\r\n        material-color={snap.items.mesh}\r\n      />\r\n      <mesh\r\n        geometry={nodes.shoe_2.geometry}\r\n        material={materials.caps}\r\n        material-color={snap.items.caps}\r\n      />\r\n      <mesh\r\n        geometry={nodes.shoe_3.geometry}\r\n        material={materials.inner}\r\n        material-color={snap.items.inner}\r\n      />\r\n      <mesh\r\n        geometry={nodes.shoe_4.geometry}\r\n        material={materials.sole}\r\n        material-color={snap.items.sole}\r\n      />\r\n      <mesh\r\n        geometry={nodes.shoe_5.geometry}\r\n        material={materials.stripes}\r\n        material-color={snap.items.stripes}\r\n      />\r\n      <mesh\r\n        geometry={nodes.shoe_6.geometry}\r\n        material={materials.band}\r\n        material-color={snap.items.band}\r\n      />\r\n      <mesh\r\n        geometry={nodes.shoe_7.geometry}\r\n        material={materials.patch}\r\n        material-color={snap.items.patch}\r\n      />\r\n    </group>\r\n  );\r\n}\r\n\r\nuseGLTF.preload(\"http://localhost:8080/uploads/shoe-draco.glb\");\r\n","D:\\TTCN\\mern\\client\\src\\Picker.js",["71","72","73","74","75","76","77","78","79","80","81"],"D:\\TTCN\\mern\\client\\src\\setupTests.js",[],["82","83"],"D:\\TTCN\\mern\\client\\src\\components\\GetUrlModel.js",[],"D:\\TTCN\\mern\\client\\src\\App.test.js",[],["84","85"],"D:\\TTCN\\mern\\client\\src\\pages\\FileModel.js",["86"],{"ruleId":"87","severity":1,"message":"88","line":6,"column":8,"nodeType":"89","messageId":"90","endLine":6,"endColumn":18},{"ruleId":"91","severity":1,"message":"92","line":31,"column":6,"nodeType":"93","endLine":31,"endColumn":8,"suggestions":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"87","severity":1,"message":"99","line":1,"column":26,"nodeType":"89","messageId":"90","endLine":1,"endColumn":35},{"ruleId":"87","severity":1,"message":"100","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":21},{"ruleId":"87","severity":1,"message":"101","line":9,"column":10,"nodeType":"89","messageId":"90","endLine":9,"endColumn":24},{"ruleId":"87","severity":1,"message":"102","line":12,"column":26,"nodeType":"89","messageId":"90","endLine":12,"endColumn":42},{"ruleId":"87","severity":1,"message":"103","line":41,"column":10,"nodeType":"89","messageId":"90","endLine":41,"endColumn":21},{"ruleId":"91","severity":1,"message":"104","line":78,"column":6,"nodeType":"93","endLine":78,"endColumn":15,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":84,"column":49,"nodeType":"108","messageId":"109","endLine":84,"endColumn":50},{"ruleId":"106","severity":1,"message":"107","line":88,"column":28,"nodeType":"108","messageId":"109","endLine":88,"endColumn":29},{"ruleId":"91","severity":1,"message":"104","line":31,"column":6,"nodeType":"93","endLine":31,"endColumn":15,"suggestions":"110"},{"ruleId":"106","severity":1,"message":"107","line":37,"column":49,"nodeType":"108","messageId":"109","endLine":37,"endColumn":50},{"ruleId":"106","severity":1,"message":"107","line":41,"column":28,"nodeType":"108","messageId":"109","endLine":41,"endColumn":29},{"ruleId":"87","severity":1,"message":"111","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},{"ruleId":"87","severity":1,"message":"112","line":1,"column":27,"nodeType":"89","messageId":"90","endLine":1,"endColumn":33},{"ruleId":"87","severity":1,"message":"113","line":1,"column":35,"nodeType":"89","messageId":"90","endLine":1,"endColumn":43},{"ruleId":"87","severity":1,"message":"99","line":1,"column":45,"nodeType":"89","messageId":"90","endLine":1,"endColumn":54},{"ruleId":"87","severity":1,"message":"114","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":16},{"ruleId":"87","severity":1,"message":"115","line":2,"column":18,"nodeType":"89","messageId":"90","endLine":2,"endColumn":26},{"ruleId":"87","severity":1,"message":"116","line":3,"column":10,"nodeType":"89","messageId":"90","endLine":3,"endColumn":24},{"ruleId":"87","severity":1,"message":"117","line":3,"column":26,"nodeType":"89","messageId":"90","endLine":3,"endColumn":37},{"ruleId":"87","severity":1,"message":"118","line":3,"column":39,"nodeType":"89","messageId":"90","endLine":3,"endColumn":46},{"ruleId":"87","severity":1,"message":"119","line":3,"column":48,"nodeType":"89","messageId":"90","endLine":3,"endColumn":61},{"ruleId":"87","severity":1,"message":"120","line":5,"column":10,"nodeType":"89","messageId":"90","endLine":5,"endColumn":15},{"ruleId":"95","replacedBy":"121"},{"ruleId":"97","replacedBy":"122"},{"ruleId":"95","replacedBy":"121"},{"ruleId":"97","replacedBy":"122"},{"ruleId":"87","severity":1,"message":"99","line":1,"column":26,"nodeType":"89","messageId":"90","endLine":1,"endColumn":35},"no-unused-vars","'ThreeModel' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMultipleFilesList'. Either include it or remove the dependency array.","ArrayExpression",["123"],"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"'useEffect' is defined but never used.","'lazy' is defined but never used.","'HexColorPicker' is defined but never used.","'getMultipleFiles' is defined but never used.","'singleFiles' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'snap.items'. Either include it or remove the dependency array.",["126"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["127"],"'Suspense' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'Canvas' is defined but never used.","'useFrame' is defined but never used.","'ContactShadows' is defined but never used.","'Environment' is defined but never used.","'useGLTF' is defined but never used.","'OrbitControls' is defined but never used.","'proxy' is defined but never used.",["124"],["125"],{"desc":"128","fix":"129"},"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"130","fix":"132"},"Update the dependencies array to be: [getMultipleFilesList]",{"range":"133","text":"134"},"Update the dependencies array to be: [hovered, snap.items]",{"range":"135","text":"136"},{"range":"137","text":"136"},[892,894],"[getMultipleFilesList]",[4020,4029],"[hovered, snap.items]",[2578,2587]]